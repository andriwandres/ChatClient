<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Presentation.Api</name>
    </assembly>
    <members>
        <member name="M:Presentation.Api.Controllers.CountryController.GetCountries(System.Threading.CancellationToken)">
             <summary>
             Gets a list of countries
             </summary>
            
             <remarks>
             Returns a list of all available countries
             </remarks>
             
             <param name="cancellationToken">
             Notifies asynchronous operations to cancel ongoing work and release resources
             </param>
             
             <returns>
             List of countries
             </returns>
            
             <response code="200">
             Contains list of countries
             </response>
            
             <response code="500">
             An unexpected error occurred
             </response>
        </member>
        <member name="M:Presentation.Api.Controllers.FriendshipController.RequestFriendship(Core.Domain.Dtos.Friendships.RequestFriendshipBody,System.Threading.CancellationToken)">
             <summary>
             Requests a new friendship
             </summary>
            
             <remarks>
             Creates a new friendship between two users
             </remarks>
             
             <param name="body">
             Specifies the user ID of the addresse to create the new friendship with
             </param>
             
             <param name="cancellationToken">
             Notifies asynchronous operations to cancel ongoing work and release resources
             </param>
             
             <returns>
             Created friendship
             </returns>
            
             <response code="201">
             Contains the created friendship
             </response>
            
             <response code="400">
             Request body failed validation or the user combination for this friendship already exists
             </response>
            
             <response code="404">
             Provided addressee user does not exist
             </response>
            
             <response code="500">
             An unexpected error occurred
             </response>
        </member>
        <member name="M:Presentation.Api.Controllers.FriendshipController.GetFriendshipById(System.Int32,System.Threading.CancellationToken)">
             <summary>
             Gets a single friendship
             </summary>
            
             <remarks>
             Returns a single friendship according to the provided friendship ID
             </remarks>
             
             <param name="friendshipId">
             ID of the friendship to get
             </param>
             
             <param name="cancellationToken">
             Notifies asynchronous operations to cancel ongoing work and release resources
             </param>
             
             <returns>
             Friendship instance
             </returns>
            
             <response code="200">
             Contains the friendship
             </response>
            
             <response code="404">
             Friendship with the provided ID does not exist
             </response>
            
             <response code="500">
             An unexpected error occurred
             </response>
        </member>
        <member name="M:Presentation.Api.Controllers.FriendshipController.UpdateFriendshipStatus(System.Int32,Core.Domain.Dtos.Friendships.UpdateFriendshipStatusBody,System.Threading.CancellationToken)">
             <summary>
             Updates a friendships status
             </summary>
            
             <remarks>
             Updates the friendship status of a given friendship
             </remarks>
             
             <param name="friendshipId">
             ID of the friendship to update
             </param>
             
             <param name="model">
             Specifies the updated friendship status
             </param>
             
             <param name="cancellationToken">
             Notifies asynchronous operations to cancel ongoing work and release resources
             </param>
             
             <returns>
             No content
             </returns>
            
             <response code="204">
             Update was successful
             </response>
            
             <response code="400">
             Updated friendship status in request body is invalid
             </response>
             
             <response code="404">
             Friendship with given ID does not exist
             </response>
            
             <response code="500">
             An unexpected error occurred
             </response>
        </member>
        <member name="M:Presentation.Api.Controllers.GroupController.CreateGroup(Core.Domain.Dtos.Groups.CreateGroupBody,System.Threading.CancellationToken)">
             <summary>
             Creates a new group
             </summary>
            
             <remarks>
             Creates a new group of users in the database and returns the newly created resource as well as a url for resource creation in the Location header
             </remarks>
             
             <param name="model">
             Specifies information of the group to be created
             </param>
             
             <param name="cancellationToken">
             Notifies asynchronous operations to cancel ongoing work and release resources
             </param>
             
             <returns>
             Created group resource
             </returns>
            
             <response code="201">
             Group has been created and is returned in the response
             </response>
            
             <response code="400">
             Group name is invalid
             </response>
            
             <response code="500">
             An unexpected error occurred
             </response>
        </member>
        <member name="M:Presentation.Api.Controllers.GroupController.GetGroupById(System.Int32,System.Threading.CancellationToken)">
             <summary>
             Gets group information
             </summary>
            
             <remarks>
             Returns a single group by its ID
             </remarks>
             
             <param name="groupId">
             ID of the group to get
             </param>
             
             <param name="cancellationToken">
             Notifies asynchronous operations to cancel ongoing work and release resources
             </param>
             
             <returns>
             Group with given ID
             </returns>
            
             <response code="200">
             Contains group with given ID
             </response>
            
             <response code="404">
             A group with the given ID does not exist
             </response>
            
             <response code="500">
             An unexpected error occurred
             </response>
        </member>
        <member name="M:Presentation.Api.Controllers.GroupController.UpdateGroup(System.Int32,Core.Domain.Dtos.Groups.UpdateGroupBody,System.Threading.CancellationToken)">
             <summary>
             Updates a group
             </summary>
            
             <remarks>
             Updates a groups information
             </remarks>
             
             <param name="groupId">
             ID of the group to update
             </param>
             
             <param name="model">
             Specifies the groups information to update
             </param>
             
             <param name="cancellationToken">
             Notifies asynchronous operations to cancel ongoing work and release resources
             </param>
             
             <returns>
             No content
             </returns>
            
             <response code="204">
             Update was successful
             </response>
            
             <response code="400">
             Request body is invalid
             </response>
            
             <response code="404">
             Group with given ID does not exist
             </response>
            
             <response code="500">
             An unexpected error occurred
             </response>
        </member>
        <member name="M:Presentation.Api.Controllers.GroupController.DeleteGroup(System.Int32,System.Threading.CancellationToken)">
             <summary>
             Deletes a group
             </summary>
            
             <remarks>
             Deletes a group from the database, given the ID
             </remarks>
             
             <param name="groupId">
             ID of the group to delete
             </param>
             
             <param name="cancellationToken">
             Notifies asynchronous operations to cancel ongoing work and release resources
             </param>
             
             <returns>
             No content
             </returns>
            
             <response code="204">
             Deletion was successful
             </response>
            
             <response code="404">
             Group with given ID does not exist
             </response>
            
             <response code="500">
             An unexpected error occurred
             </response>
        </member>
        <member name="M:Presentation.Api.Controllers.GroupController.GetMembershipsByGroup(System.Int32,System.Threading.CancellationToken)">
             <summary>
             Gets all memberships of a group
             </summary>
            
             <remarks>
             Returns a list of all memberships of a group, given the groups ID
             </remarks>
             
             <param name="groupId">
             ID of the group to fetch the members from
             </param>
             
             <param name="cancellationToken">
             Notifies asynchronous operations to cancel ongoing work and release resources
             </param>
             
             <returns>
             List of memberships in given group
             </returns>
            
             <response code="200">
             Contains a list of memberships within the given group
             </response>
            
             <response code="404">
             The group with given ID does not exist
             </response>
            
             <response code="500">
             An unexpected error occurred
             </response>
        </member>
        <member name="M:Presentation.Api.Controllers.GroupMembershipController.CreateMembership(Core.Domain.Dtos.GroupMemberships.CreateMembershipBody,System.Threading.CancellationToken)">
             <summary>
             Creates a new group membership
             </summary>
            
             <remarks>
             Adds a new user to the list of members of a group
             </remarks>
             
             <param name="body">
             Specifies information about the membership to create
             </param>
             
             <param name="cancellationToken">
             Notifies asynchronous operations to cancel ongoing work and release resources
             </param>
             
             <returns>
             Created membership
             </returns>
            
             <response code="201">
             Creation was successful. Response contains created membership
             </response>
            
             <response code="400">
             Request body was invalid
             </response>
            
             <response code="403">
             <para>1.) The user is already a member of this group</para>
             <para>2.) You are not permitted to create users in this group</para>
             </response>
             
             <response code="404">
             <para>1.) Provided user does not exist</para>
             <para>2.) Provided group does not exist</para>
             </response>
            
             <response code="500">
             An unexpected error occurred
             </response>
        </member>
        <member name="M:Presentation.Api.Controllers.GroupMembershipController.GetMembershipById(System.Int32,System.Threading.CancellationToken)">
             <summary>
             Gets a single membership
             </summary>
            
             <remarks>
             Returns a single group membership by its ID
             </remarks>
             
             <param name="membershipId">
             The ID of the membership to get
             </param>
             
             <param name="cancellationToken">
             Notifies asynchronous operations to cancel ongoing work and release resources
             </param>
             
             <returns>
             Group membership that matches given ID
             </returns>
            
             <response code="200">
             Contains matching membership
             </response>
            
             <response code="404">
             Membership with given ID does not exist
             </response>
            
             <response code="500">
             An unexpected error occurred
             </response>
        </member>
        <member name="M:Presentation.Api.Controllers.GroupMembershipController.UpdateMembership(System.Int32,Core.Domain.Dtos.GroupMemberships.UpdateMembershipBody,System.Threading.CancellationToken)">
             <summary>
             Updates a membership
             </summary>
            
             <remarks>
             Updates the admin status of an existing group membership
             </remarks>
             
             <param name="membershipId">
             ID of the membership to update
             </param>
             
             <param name="body">
             Specifies the admin status to be updated
             </param>
             
             <param name="cancellationToken">
             Notifies asynchronous operations to cancel ongoing work and release resources
             </param>
             
             <returns>
             No content
             </returns>
            
             <response code="204">
             Update was successful
             </response>
            
             <response code="400">
             Request body failed model validation
             </response>
            
             <response code="403">
             <para>1.) User tried to update his own membership</para>
             <para>2.) User is not permitted to update this membership. Only administrators of a group can update memberships</para>
             </response>
            
             <response code="404">
             Membership with given ID does not exist
             </response>
            
             <response code="500">
             An unexpected error occurred
             </response>
        </member>
        <member name="M:Presentation.Api.Controllers.GroupMembershipController.DeleteMembership(System.Int32,System.Threading.CancellationToken)">
             <summary>
             Deletes a membership
             </summary>
            
             <remarks>
             Deletes a user from a group
             </remarks>
             
             <param name="membershipId">
             ID of the membership to delete
             </param>
             
             <param name="cancellationToken">
             Notifies asynchronous operations to cancel ongoing work and release resources
             </param>
             
             <returns>
             No content
             </returns>
            
             <response code="204">
             Deletion was successful
             </response>
            
             <response code="403">
             The user is not permitted to delete this user from this group
             </response>
             
             <response code="404">
             Membership with given ID does not exist
             </response>
            
             <response code="500">
             An unexpected error occurred
             </response>
        </member>
        <member name="M:Presentation.Api.Controllers.LanguageController.GetLanguages(System.Threading.CancellationToken)">
             <summary>
             Gets a list of all languages
             </summary>
            
             <remarks>
             Returns a list of all languages that are supported within this application
             </remarks>
             
             <param name="cancellationToken">
             Notifies asynchronous operations to cancel ongoing work and release resources
             </param>
             
             <returns>
             A list of available languages
             </returns>
            
             <response code="200">
             Contains a list of available languages
             </response>
            
             <response code="500">
             An unexpected error occurred
             </response>
        </member>
        <member name="M:Presentation.Api.Controllers.LanguageController.GetTranslationsByLanguage(System.Int32,Core.Domain.Dtos.Languages.GetTranslationsByLanguageQueryParams,System.Threading.CancellationToken)">
             <summary>
             Gets a list of translations
             </summary>
            
             <remarks>
             Returns a list of translations for a given language. Translations within that language can also be filtered by pattern matching
             </remarks>
             
             <param name="languageId">
             ID of the language to get translations from
             </param>
             
             <param name="model">
             Specifies a pattern filter that can be applied to the translation key
             </param>
             
             <param name="cancellationToken">
             Notifies asynchronous operations to cancel ongoing work and release resources
             </param>
             
             <returns>
             A list of translations in the given language that satisfy the pattern filter
             </returns>
            
             <response code="200">
             Contains a list of translations for given language
             </response>
            
             <response code="400">
             Search pattern contains illegal characters
             </response>
            
             <response code="404">
             Language with given ID does not exist
             </response>
            
             <response code="500">
             An unexpected error occurred
             </response>
        </member>
        <member name="M:Presentation.Api.Controllers.MessageController.SendMessage(Core.Domain.Dtos.Messages.SendMessageBody,System.Threading.CancellationToken)">
             <summary>
             Sends a message to one or multiple recipients
             </summary>
            
             <remarks>
             Creates a message and sends it to one or multiple users in the system depending on whether the target is a group chat or a private chat
             </remarks>
             
             <param name="body">
             Specifies information about the message to be sent
             </param>
             
             <param name="cancellationToken">
             Notifies asynchronous operations to cancel ongoing work and release resources
             </param>
             
             <returns>
             Created result with Location header that tells the consumer where to get the created resource
             </returns>
            
             <response code="201">
             Sending of message was successful
             </response>
            
             <response code="400">
             Model validation of request body has failed
             </response>
            
             <response code="403">
             <para>1.) User tried messaging himself</para>
             <para>2.) User tried to answer a message from a foreign chat source</para>
             </response>
            
             <response code="404">
             <para>1.) Recipient with given ID does not exist</para>
             <para>2.) Parent message with given ID does not exist</para>
             </response>
            
             <response code="500">
             An unexpected error occurred
             </response>
        </member>
        <member name="M:Presentation.Api.Controllers.MessageController.GetMessageById(System.Int32,System.Threading.CancellationToken)">
             <summary>
             Gets information about a message
             </summary>
            
             <remarks>
             Gets detailed information about a single message, given its unique ID.
             </remarks>
             
             <param name="messageId">
             The ID of the message to get
             </param>
             
             <param name="cancellationToken">
             Notifies asynchronous operations to cancel ongoing work and release resources
             </param>
             
             <returns>
             Message with given ID
             </returns>
            
             <response code="200">
             Contains message with given ID
             </response>
            
             <response code="403">
             The user is not permitted to access the given message.
             </response>
            
             <response code="404">
             Message with given ID does not exist
             </response>
            
             <response code="500">
             An unexpected error occurred
             </response>
        </member>
        <member name="M:Presentation.Api.Controllers.MessageController.EditMessage(System.Int32,Core.Domain.Dtos.Messages.EditMessageBody,System.Threading.CancellationToken)">
             <summary>
             Edits a message
             </summary>
            
             <remarks>
             Edits the HTML content of a message and marks a message as 'Edited'
             </remarks>
             
             <param name="messageId">
             Unique ID of the message to edit
             </param>
             
             <param name="body">
             Specifies the new HTML content to be applied
             </param>
             
             <param name="cancellationToken">
             Notifies asynchronous operations to cancel ongoing work and release resources
             </param>
             
             <returns>
             No content
             </returns>
            
             <response code="204">
             Edit was successful
             </response>
            
             <response code="400">
             Request body has failed model validation
             </response>
            
             <response code="403">
             The user tried to edit a message that is not writtem by himself
             </response>
            
             <response code="404">
             A message with given ID does not exist
             </response>
            
             <response code="500">
             An unexpected error occurred
             </response>
        </member>
        <member name="M:Presentation.Api.Controllers.MessageController.DeleteMessage(System.Int32,System.Threading.CancellationToken)">
             <summary>
             Deletes a message
             </summary>
            
             <remarks>
             Deletes an existing message with the possibility to re-activate it again later
             </remarks>
             
             <param name="messageId">
             The ID of the message to delete
             </param>
             
             <param name="cancellationToken">
             Notifies asynchronous operations to cancel ongoing work and release resources
             </param>
            
             <returns>
             No content
             </returns>
            
             <response code="204">
             Deletion was successful
             </response>
            
             <response code="403">
             The user is not the author of the message
             </response>
            
             <response code="404">
             The message with given ID does not exist
             </response>
            
             <response code="500">
             An unexpected error occurred
             </response>
        </member>
        <member name="M:Presentation.Api.Controllers.RecipientController.GetMessagesWithRecipient(System.Int32,Core.Domain.Dtos.Messages.GetMessagesWithRecipientQueryParams,System.Threading.CancellationToken)">
            <summary>
            Gets a list of messages with a recipient
            </summary>
            
            <remarks>
            Returns a list of messages that have been sent to or received by the given recipient.
            </remarks>
            
            <param name="recipientId">
            The ID of the recipient to load messages from
            </param>
            
            <param name="boundaries">
            Paging boundaries for loading messages
            </param>
            
            <param name="cancellationToken">
            Notifies asynchronous operations to cancel ongoing work and release resources
            </param>
            
            <returns>
            List of messages with given recipient
            </returns>
            
            <response code="200">
            Contains a list of messages with given recipient
            </response>
            
            <response code="400">
            Upper limit was not provided or is invalid
            </response>
            
            <response code="404">
            Recipient with given ID does not exist
            </response>
            
            <response code="500">
            An unexpected error occurred
            </response>
        </member>
        <member name="M:Presentation.Api.Controllers.SessionController.Login(Core.Domain.Dtos.Session.LoginBody,System.Threading.CancellationToken)">
             <summary>
             Signs the user in to a new session
             </summary>
            
             <remarks>
             Validates given user credentials and returns the user's information alongside a new valid access token
             </remarks>
             
             <param name="credentials">
             User credentials to be validated
             </param>
             
             <param name="cancellationToken">
             Notifies asynchronous operations to cancel ongoing work and release resources
             </param>
             
             <returns>
             User information alongside new access token
             </returns>
            
             <response code="200">
             Login was successful. User information is returned
             </response>
            
             <response code="400">
             User credentials are in an incorrect format
             </response>
            
             <response code="401">
             UserName, e-mail and/or password were incorrect
             </response>
            
             <response code="500">
             An unexpected error occurred
             </response>
        </member>
        <member name="M:Presentation.Api.Controllers.UserController.CreateAccount(Core.Domain.Dtos.Users.CreateAccountBody,System.Threading.CancellationToken)">
             <summary>
             Creates a new user account
             </summary>
            
             <remarks>
             Validates given user credentials and creates a new user account
             </remarks>
             
             <param name="credentials">
             Specifies the user credentials to be used for the new user account
             </param>
             
             <param name="cancellationToken">
             Notifies asynchronous operations to cancel ongoing work and release resources
             </param>
             
             <returns>
             Location of where to fetch the created user data ('Location' header)
             </returns>
            
             <response code="201">
             Contains the location of where to fetch the created user data inside the 'Location' header
             </response>
            
             <response code="400">
             Provided user credentials are in an invalid format
             </response>
            
             <response code="403">
             There is already a user with provided userName or email. The user is not allowed to sign up with provided credentials
             </response>
            
             <response code="500">
             An unexpected error occurred on the server
             </response>
        </member>
        <member name="M:Presentation.Api.Controllers.UserController.UserExists(Core.Domain.Dtos.Users.UserExistsQueryParams,System.Threading.CancellationToken)">
             <summary>
             Checks whether a user already exists
             </summary>
            
             <remarks>
             Checks whether or not a given e-mail address or user name already exists in the database.
             A successful response (200 OK) means that the user with given information already exists, whereas an unsuccessful
             response (404 Not Found) means that the user with given information does not yet exist in the system.
             </remarks>
             
             <param name="queryParams">
             Contains information on the user to query for existence
             </param>
             
             <param name="cancellationToken">
             Notifies asynchronous operations to cancel ongoing work and release resources
             </param>
             
             <returns>
             No content, since HEAD requests carry no response body
             </returns>
            
             <response code="200">
             The user with given information already exists in the database
             </response>
            
             <response code="400">
             No valid information was passed to the query parameters
             </response>
            
             <response code="404">
             A user with given information does not yet exists in the database
             </response>
            
             <response code="500">
             An unexpected error occurred
             </response>
        </member>
        <member name="M:Presentation.Api.Controllers.UserController.GetUserProfile(System.Int32,System.Threading.CancellationToken)">
             <summary>
             Gets a users profile information
             </summary>
            
             <remarks>
             Returns profile information of the user with given id
             </remarks>
             
             <param name="userId">
             ID of the user to search by
             </param>
             
             <param name="cancellationToken">
             Notifies asynchronous operations to cancel ongoing work and release resources
             </param>
             
             <returns>
             User profile information
             </returns>
             
             <response code="200">
             Contains user profile information
             </response>
             
             
             <response code="404">
             The user with the given ID could not be found
             </response>
             
             <response code="500">
             An unexpected error occurred on the server
             </response>
        </member>
        <member name="M:Presentation.Api.Controllers.UserController.Authenticate(System.Threading.CancellationToken)">
             <summary>
             Authenticates the current user
             </summary>
            
             <remarks>
             Authenticates the current user by his access token in the Authorization header and returns user information accordingly
             </remarks>
             
             <param name="cancellationToken">
             Notifies asynchronous operations to cancel ongoing work and release resources
             </param>
             
             <returns>
             User information alongside access token
             </returns>
            
             <response code="200">
             Contains authenticated user alongside access token
             </response>
            
             <response code="500">
             An unexpected error occured on the server
             </response>
        </member>
        <member name="M:Presentation.Api.Controllers.UserController.GetOwnFriendships(System.Threading.CancellationToken)">
             <summary>
             Gets all friendships of the current user
             </summary>
            
             <remarks>
             Returns all the friendships where the current user is either the requester or the addressee
             </remarks>
             
             <param name="cancellationToken">
             Notifies asynchronous operations to cancel ongoing work and release resources
             </param>
             
             <returns>
             List of friendships
             </returns>
            
             <response code="200">
             Contains a list of the current users friendships
             </response>
            
             <response code="500">
             An unexpected error occurred
             </response>
        </member>
        <member name="M:Presentation.Api.Controllers.UserController.GetOwnRecipients(System.Threading.CancellationToken)">
             <summary>
             Gets a list of the user's relevant recipients
             </summary>
            
             <remarks>
             Returns a list of recipients, where there is a message that is sent to or from the current user. Each recipient contains information about the latest message sent or received to it.
             </remarks>
             
             <param name="cancellationToken">
             Notifies asynchronous operations to cancel ongoing work and release resources
             </param>
             
             <returns>
             List of relevant recipients to a users
             </returns>
            
             <response code="200">
             Contains list of relevant recipients to the current user
             </response>
            
             <response code="500">
             An unexpected error occurred
             </response>
        </member>
        <member name="M:Presentation.Api.Controllers.UserController.UpdateAvailability(Core.Domain.Dtos.Availability.UpdateAvailabilityBody,System.Threading.CancellationToken)">
             <summary>
             Updates the user's availability status
             </summary>
            
             <remarks>
             Manually updates the user's availability status
             </remarks>
            
             <param name="body">
             Specifies the updated availability status value
             </param>
             
             <param name="cancellationToken">
             Notifies asynchronous operations to cancel ongoing work and release resources
             </param>
             
             <returns>
             No content
             </returns>
            
             <response code="204">
             Update was successful
             </response>
            
             <response code="400">
             The request body has failed model validation
             </response>
             
             <response code="500">
             An unexpected error occurred
             </response>
        </member>
    </members>
</doc>
